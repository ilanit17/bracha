בוודאי. ריכזתי עבורך את כל הקוד של הגרסה הסופית והמלאה.

התהליך הוא פשוט:

צור את מבנה התיקיות והקבצים כפי שמוסבר מתחת לכותרת.

העתק והדבק את התוכן של כל קטע קוד לקובץ המתאים לו.

מבנה הפרויקט הסופי

ודא שיש לך את מבנה התיקיות והקבצים הבא לפני שאתה מתחיל להדביק את הקוד:

Generated code
/ (תיקיית הפרויקט הראשית)
├── boards/             (תיקייה ריקה שתכיל את הלוחות)
├── public/
│   ├── index.html
│   ├── style.css
│   └── script.js
├── package.json
└── server.js

1. קוד עבור הקובץ package.json

זהו קובץ התצורה של הפרויקט. הוא אומר לסביבת הריצה (כמו Glitch או Node.js מקומי) אילו חבילות להתקין ואיך להריץ את הפרויקט.

העתק והדבק את הקוד הבא לקובץ package.json:

Generated json
{
  "name": "blessing-board",
  "version": "1.0.0",
  "description": "A collaborative blessing board for students",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.18.2"
  },
  "engines": {
    "node": "16.x"
  },
  "keywords": [
    "node",
    "express",
    "collaboration"
  ],
  "author": "",
  "license": "ISC"
}
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Json
IGNORE_WHEN_COPYING_END
2. קוד עבור הקובץ server.js

זהו קוד השרת (Backend) שמנהל את כל הלוגיקה: שמירת הברכות, יצירת לוחות חדשים, ואיפוס לוחות.

העתק והדבק את הקוד הבא לקובץ server.js:

Generated javascript
const express = require('express');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;
const BOARDS_DIR = path.join(__dirname, 'boards');

// ודא שהתיקייה boards קיימת
if (!fs.existsSync(BOARDS_DIR)) {
    fs.mkdirSync(BOARDS_DIR);
}

app.use(express.json());
app.use(express.static('public'));

// פונקציה לקבלת נתיב הקובץ של לוח ספציפי
const getBoardFilePath = (studentName) => {
    // מנרמל את שם הקובץ כדי למנוע תווים בעייתיים
    const safeFileName = encodeURIComponent(studentName) + '.json';
    return path.join(BOARDS_DIR, safeFileName);
};

// --- API Endpoints ---

// GET /api/messages?student=שם_התלמיד
// מחזיר ברכות עבור תלמיד ספציפי
app.get('/api/messages', (req, res) => {
    const studentName = req.query.student;
    if (!studentName) {
        return res.status(400).json({ error: 'Student name is required' });
    }

    const filePath = getBoardFilePath(studentName);

    if (!fs.existsSync(filePath)) {
        return res.json([]); // אם הלוח עדיין לא קיים, החזר מערך ריק
    }

    const data = fs.readFileSync(filePath);
    res.json(data.length > 0 ? JSON.parse(data) : []);
});

// POST /api/messages?student=שם_התלמיד
// שומר ברכה חדשה בלוח של תלמיד ספציפי
app.post('/api/messages', (req, res) => {
    const studentName = req.query.student;
    if (!studentName) {
        return res.status(400).json({ error: 'Student name is required' });
    }

    const filePath = getBoardFilePath(studentName);
    let messages = [];

    if (fs.existsSync(filePath)) {
        const data = fs.readFileSync(filePath);
        messages = data.length > 0 ? JSON.parse(data) : [];
    }
    
    const { author, text, color } = req.body;
    if (!text) {
        return res.status(400).json({ error: 'Message text cannot be empty' });
    }

    const newMessage = {
        id: Date.now(),
        author: author || '',
        text: text,
        color: color || '#ffffe0',
        timestamp: new Date().toISOString()
    };

    messages.push(newMessage);
    fs.writeFileSync(filePath, JSON.stringify(messages, null, 2));

    res.status(201).json(newMessage);
});

// POST /api/reset?student=שם_התלמיד&secret=קוד_סודי
// מאפס (מוחק) לוח של תלמיד ספציפי - פעולה למנהל בלבד!
app.post('/api/reset', (req, res) => {
    const { student, secret } = req.query;

    // מנגנון אבטחה פשוט. שנה את הקוד הסודי אם תרצה!
    if (secret !== 'start-over-2024') {
        return res.status(403).send('Forbidden: Invalid secret code');
    }

    if (!student) {
        return res.status(400).send('Student name is required for reset');
    }

    const filePath = getBoardFilePath(student);
    if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath); // מוחק את הקובץ
        console.log(`Board for ${student} has been reset.`);
        res.status(200).send(`Board for ${student} has been successfully reset.`);
    } else {
        res.status(404).send('Board not found.');
    }
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
    console.log("To create a new board, add details to the URL, for example:");
    console.log(`/server-address/?student=Daniel&teacher=Yossi&class=V2`);
});
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
JavaScript
IGNORE_WHEN_COPYING_END
3. קוד עבור הקובץ public/index.html

זהו שלד ה-HTML של הדף שהמשתמשים יראו.

העתק והדבק את הקוד הבא לקובץ public/index.html:

Generated html
<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>לוח ברכות שיתופי</title>
    <link rel="stylesheet" href="style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>

    <header>
        <h1 id="main-title">לוח ברכות</h1>
        <p id="sub-title">מהמורה והכיתה</p>
    </header>

    <main>
        <section id="board" class="board-container">
            <!-- הברכות יוצגו כאן על ידי JavaScript -->
        </section>

        <section class="form-section">
            <h2>הוסף ברכה משלך:</h2>
            <form id="message-form">
                <input type="text" id="author-input" placeholder="השם שלך (לא חובה)">
                <textarea id="text-input" placeholder="כתוב כאן את הברכה שלך..." required></textarea>
                
                <div class="color-picker-wrapper">
                    <label for="color-input">בחר צבע רקע לברכה:</label>
                    <input type="color" id="color-input" value="#ffffe0">
                </div>

                <button type="submit">שלח ברכה</button>
            </form>
        </section>
    </main>
    
    <script src="script.js"></script>
</body>
</html>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Html
IGNORE_WHEN_COPYING_END
4. קוד עבור הקובץ public/style.css

זהו קוד ה-CSS שמעצב את הדף ונותן לו מראה של לוח פתקיות, וגם מתאים אותו להדפסה.

העתק והדבק את הקוד הבא לקובץ public/style.css:

Generated css
body {
    font-family: 'Heebo', sans-serif;
    background-color: #f0f4f8;
    color: #333;
    margin: 0;
    padding: 20px;
    text-align: center;
}

header {
    margin-bottom: 40px;
}

h1 {
    color: #005a9c;
}

.board-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin-bottom: 40px;
}

.message-card {
    border: 1px solid #ccc;
    box-shadow: 5px 5px 7px rgba(0,0,0,0.1);
    padding: 15px;
    width: 250px;
    min-height: 150px;
    text-align: right;
    transition: transform 0.2s;
    display: flex;
    flex-direction: column;
}

.message-card:hover {
    transform: scale(1.05);
}

.message-card h3 {
    margin-top: 0;
    color: #d9534f;
    border-bottom: 1px solid #eee;
    padding-bottom: 5px;
}

.message-card p {
    font-size: 1rem;
    white-space: pre-wrap; /* שומר על מעברי שורה */
    flex-grow: 1; /* גורם לטקסט למלא את המקום */
}

.form-section {
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

#message-form {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

#message-form input[type="text"],
#message-form textarea {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1rem;
    font-family: inherit;
}

#message-form textarea {
    min-height: 100px;
    resize: vertical;
}

#message-form button {
    padding: 12px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: background-color 0.2s;
}

#message-form button:hover {
    background-color: #0056b3;
}

.color-picker-wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 8px;
    border: 1px solid #eee;
    border-radius: 4px;
}

#color-input {
    width: 50px;
    height: 30px;
    border: none;
    background-color: transparent;
    cursor: pointer;
}

/* עיצוב להדפסה */
@media print {
    body {
        background-color: #fff;
        padding: 0;
        margin: 20px;
    }
    .form-section, header p#sub-title, #message-form button {
        display: none; /* הסתר את הטופס והאלמנטים הלא רלוונטיים בהדפסה */
    }
    header h1 {
        margin-bottom: 20px;
    }
    .board-container {
        display: block; /* שנה לפריסה של בלוקים רגילים להדפסה טובה יותר */
    }
    .message-card {
        box-shadow: none;
        border: 1px solid #000;
        page-break-inside: avoid; /* נסה למנוע חיתוך של פתקית בין עמודים */
        margin-bottom: 20px;
        width: auto;
    }
}
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Css
IGNORE_WHEN_COPYING_END
5. קוד עבור הקובץ public/script.js

זהו קוד ה-JavaScript (Frontend) שרץ בדפדפן של המשתמש. הוא אחראי על קריאת הפרמטרים מה-URL, הצגת הברכות, ושליחת ברכות חדשות לשרת.

העתק והדבק את הקוד הבא לקובץ public/script.js:

Generated javascript
document.addEventListener('DOMContentLoaded', () => {
    // קריאת פרמטרים מה-URL
    const urlParams = new URLSearchParams(window.location.search);
    const studentName = urlParams.get('student');
    const teacherName = urlParams.get('teacher');
    const className = urlParams.get('class');

    // אם אין שם תלמיד ב-URL, הצג הודעת שגיאה והפסק את הריצה
    if (!studentName) {
        document.body.innerHTML = `
            <div style="text-align: center; padding: 50px; font-size: 1.2rem; font-family: 'Heebo', sans-serif;">
                <h1>שגיאה: לוח לא נמצא</h1>
                <p>כדי ליצור לוח ברכות, יש להוסיף את פרטי התלמיד לכתובת הדפדפן.</p>
                <p>לדוגמה: <strong>${window.location.origin}?student=דניאל&teacher=יוסי&class=ו2</strong></p>
            </div>
        `;
        return;
    }
    
    // עדכון הכותרות בדף עם המידע מה-URL
    const mainTitle = document.getElementById('main-title');
    const subTitle = document.getElementById('sub-title');
    mainTitle.textContent = `לוח ברכות פרידה מ: ${studentName} 🎈`;
    if (teacherName || className) {
        subTitle.innerHTML = `מהמורה: ${teacherName || ''} וכיתה: ${className || ''}<br>כולנו נתגעגע ונאחל לך המון הצלחה!`;
    } else {
        subTitle.textContent = "מאחלים לך המון הצלחה בהמשך הדרך!";
    }

    const board = document.getElementById('board');
    const form = document.getElementById('message-form');
    const authorInput = document.getElementById('author-input');
    const textInput = document.getElementById('text-input');
    const colorInput = document.getElementById('color-input');

    const createMessageElement = (message) => {
        const card = document.createElement('div');
        card.className = 'message-card';
        card.style.backgroundColor = message.color;

        if (message.author) {
            const authorEl = document.createElement('h3');
            authorEl.textContent = message.author;
            card.appendChild(authorEl);
        } else {
            const authorEl = document.createElement('h3');
            authorEl.textContent = "ממני באהבה ❤️";
            authorEl.style.fontStyle = 'italic';
            authorEl.style.color = '#555';
            card.appendChild(authorEl);
        }
        
        const textEl = document.createElement('p');
        textEl.textContent = message.text;
        card.appendChild(textEl);
        
        return card;
    };

    const fetchAndDisplayMessages = async () => {
        try {
            const response = await fetch(`/api/messages?student=${encodeURIComponent(studentName)}`);
            const messages = await response.json();
            
            board.innerHTML = '';
            messages.sort((a, b) => a.id - b.id); // ודא שהברכות מסודרות לפי סדר כרונולוגי
            messages.forEach(message => {
                const messageElement = createMessageElement(message);
                board.appendChild(messageElement);
            });
        } catch (error) {
            console.error('Error fetching messages:', error);
        }
    };

    form.addEventListener('submit', async (event) => {
        event.preventDefault();

        const author = authorInput.value.trim();
        const text = textInput.value.trim();
        const color = colorInput.value;

        if (!text) {
            alert('נא למלא את תוכן הברכה');
            return;
        }

        const newMessage = { author, text, color };

        try {
            const response = await fetch(`/api/messages?student=${encodeURIComponent(studentName)}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newMessage),
            });

            if (response.ok) {
                authorInput.value = '';
                textInput.value = '';
                fetchAndDisplayMessages();
            } else {
                alert('אירעה שגיאה בשליחת הברכה.');
            }
        } catch (error) {
            console.error('Error submitting message:', error);
        }
    });

    fetchAndDisplayMessages();
});
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
JavaScript
IGNORE_WHEN_COPYING_END

זה הכל! כעת יש לך את כל הקוד הדרוש. תוכל להריץ אותו מקומית או להעלות אותו לשירות אירוח כמו Glitch.
